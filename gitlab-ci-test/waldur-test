#!/usr/bin/env sh
set -e

TEST_MODE="${1:-UNIT}"

echo "[+] Install dependencies in case of absence"
pip3 install poetry==1.8.3
pip3 install --upgrade setuptools==72.1.0
poetry install -vvv

echo "[+] Setup test settings"
cat > src/waldur_mastermind/test_settings.py <<-EOF
from waldur_core.server.test_settings import *
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

# Data written to unlogged tables is not written to the write-ahead log,
# which makes them considerably faster than ordinary tables.
BaseDatabaseSchemaEditor.sql_create_table = "CREATE UNLOGGED TABLE %(table)s (%(definition)s)"

DATABASES = {
'default': {
  'ENGINE': 'django.db.backends.postgresql',
  'NAME': 'test_waldur',
  'USER': 'runner',
  'HOST': 'postgres',
  'PORT': 5432,
  'PASSWORD': 'waldur',
  }
}
EOF

if [ "$TEST_MODE" = "UNIT" ]; then
  echo "[+] Running unit tests without migrations"
  pytest \
      --test-group-count $CI_NODE_TOTAL \
      --test-group=$CI_NODE_INDEX \
      --test-group-random-seed=12345 \
      --reuse-db \
      --junitxml=report.xml \
      --cov=src/ \
      --no-migrations \
      --ds=waldur_mastermind.test_settings \
      src

  # Check default configuration
  DJANGO_SETTINGS_MODULE=waldur_mastermind.test_settings waldur print_settings > /dev/null
elif [ "$TEST_MODE" = "MIGRATIONS" ]; then
  echo "[+] Running migration test"
  pytest \
      --junitxml=report.xml \
      --cov=src/ \
      --create-db \
      --ds=waldur_mastermind.test_settings \
      src/waldur_core/core/tests/test_management.py
else
  echo "UNKNOWN TEST MODE: $TEST_MODE"
  exit 1
fi
